=head2 transaction types

=item preauth : reserve the amount
=item auth : actual payment
=item base_check : plausibility check
=item check_save: do a preauth and then cancel (some banks don't support this)

=head2  actions

=item capture

Withdrawing pre-authorized transactions

only ID needed.

This can fail if too much time passed (e.g. CC locked). Say within 6 days.

=item reverse

cancel preauth (full amount)

=item refund_cap 

cancel the payment after its execution (even several) On the credit
card statement of the buyer both the withdrawal, and the material is
recorded in writing. 

* Ask: Wtf is ELV. For ELV refund_cap could be limited or impossible


=head2 re-actions

New payments/auth using the old transaction ID. Data stored for 3 month.

=item re_preauth

=item re_auth 

=item grefund_cap !!! unclear. Why

To perform a credit for a credit card with no transaction has yet been carried out with ipayment.

Grefund_cap transaction type should not be used in an online store environment but most of backend systems.

Therefore, you must allow the use of this type of transaction first free cups of ipayment support. Please contact in this case, a rationale for the activation request

=head2 phone auth

It can happen that a deduction or credit for payments by credit card completed
rejects is. You can recognize the error code if alternatively a telephone authorization
possible. This happens, for example, if it is in the transaction is a very high posts. Call in this case to the approval of your payment service provider
and perform an unauthorized payment by phone.

=item voice_auth

You have obtained the phone approval and want to charge the amount
now. After approval by the authorization service, you can type the
transaction voice_auth use. In addition to the credit card
information you need as an additional parameter to Authorization
number, which you have been called on the phone. The amount will be
immedi- booked.

=item voice_grefund_cap

After unlocking. Unclear the difference between voice_auth and
voice_grefund_cap

=head2 Silent CGI mode

https://ipayment.de/merchant/99999/example/2.0/
https://ipayment.de/merchant/99999/processor/2.0/
https://ipayment.de/merchant/99999/example_addrcheck.php

For successful transactions, the parameters specified in the call 
trxuser_id trx_amount, trx_currency, trx_user_comment and address data of
your customers repeated in the result parameters.

Silent mode allows you ipayment invisibly integrate into your shop.
While the ordering process, the payment information is transmitted
directly to ipayment and there processed processed without any of
ipayment is a visible issue for your customers. You can a form for
recording the data to create maps, the layout perfect for your online
Shops fits. The feedback (result or error) will also be on a separate
Page displayed in your shop. This leaves your customer during the
order process never noticeably your shop. ipayment is on silent mode
relatively easy to integrate into your web application. Ver- apply to
the parameters redirect_url (success message) or silent_error_url
(Error message). Both URLs have CGI scripts to be in your store,
which-due to the overweight surrounded parameters can perform
appropriate actions. Such actions are to His example by storing the
order or the issue of the error message. Prevent manipulation of
payment data In addition to the payment data in silent mode when
calling the ipayment Basic data (for example your ipayment account
data) and other fixed-Pa parameters (for example, amount, and currency
settings) transferred. These values can be viewed by the purchaser and
also manipulated. No problem, it is, if after a successful payment,
the correctness of these values ​​is checked. If you want to prevent
these parameters from the buyer be viewed or manipulated may be, you
can transfer the information to advance ipayment and a session at
ipayment Pre-Generate. After that, transfer the call, only the ID of
the session. Exactly how it works, refer to the chapter Pre-Generate
session IDs on page 42 read. Ipayment the server uses a 256-bit SSL
certificate. Thereby, the security of data Payment information to
ensure the processing on the server ipayment. So safety can be ensured
even at the entry and transmission of data, SSL on your pages must
also be present. If you do not use SSL, it can happen that some
browsers when it returns from the SSL-secured ipayment server in your
Web warnings. In addition, we strongly recommend that you use a
special "Hidden Trigger Script" to obtain feedback from successful
transactions secure. For more information mation on this process, see
Secured feedback successful transaction tions on page 41 When silent
mode you can use 3-D Secure for "Verified by Visa", "MasterCard
SecureCode" and use "Maestro SecureCode" without further changes are
needed. 3-D Secure is in silent mode automatically available. A
separate PCI certification is also not necessary, since the payment
data solely on the server does ipayment be working. Example of
application In our FAQ you will find an example script for integrating
ipayment in "Si lent mode ": http://faq.ipayment.de> questions
regarding the individual connection of ipayment> How can I ipayment in
"silent mode" use?

=head3 Basic parameters

Parameter to identify the ipayment accounts
The following parameters are used to identify the ipayment accounts necessary.

=item Account ID (included in the url)

CGI Name: - (included in the URL of the script)
Data type: Integer

ID used ipayment accounts. You can find this value in your ipayment
Configuration menu under General Data.


=item Application ID
CGI Name: C<trxuser_id>
Data type: Integer

The application ID, you can in your ipayment configuration menu read
using  Anwendung > Details 

=item Application Password
CGI Name: C<trxpassword>
Data type: Long

For each application, there is an application password which
automatically ipayment System is presented. The password consists of
numbers. You will find the application password in your ipayment
Anwendungen > Details

B<This is not the account password!>


=item Admin password action
CGI name: C<adminactionpassword>
Data type: String

The admin password action is only for administrative transactions,
such as cancellations, Chargebacks or debits needed.

Used by the SOAP request.

Log into the ipayment configuration menu is not possible with this password.

=head3 Parameters for the amount and currency


With these parameters, you can specify the amount and the currency of the transaction.

=item Currency Transaction
CGI Name: C<trx_currency>
Data type: string, exactly 3 letters

Currency in which the payment is processed. There are all known
three-letter ISO Currency codes allowed. A list of known currency
codes, see L<https://ipayment.de/> under B<Technik>. So says the doc,
but I couldn't find the link.


Note that the processing of payments in the on-
given currency must be agreed with your payment provider.

=item Amount of the transaction
CGI Name: C<trx_amount>
Data type: Integer, only positive value, a maximum of 10,000,000

Amount to be debited. Enter the value in the B<smallest currency
unit>, for Example cents. B<Decimal points> or other characters except
numbers are B<not allowed>.

For example, the amount of EUR 10.00 is given as 1000 cents.

So we have to do something like this C<int($cart * 100)>;

=item Amount of the transaction as individual components
CGI Name: C<trx_amount_base>, C<trx_amount_decimal>
Data type: Integer, only positive values

This is maybe a better choice then the above C<trx_amount>

C<trx_amount_base> is the amount before the comma (Euro) and
C<trx_amount_decimal> for the amount after the decimal (cents).

If C<trx_amount> is set, the parameters here are ignored.

=head3 Parameter to specify the desired payment

=item Transaction type

CGI Name: C<trx_typ>
Data type: string, values ​​as described
Ipayment are depending on the mode of payment providers and payment medium following
Transaction types are allowed (for Silent Mode):

     preauth
     auth
     base_check
     check_save
     voice_auth
     voice_grefund_cap
     re_preauth
     re_auth
     capture
     reverse
     refund_cap
     grefund_cap

Default to C<auth>.

=item Payment type 

CGI Name: C<trx_paymenttyp>
Valuses: C<cc> (Credit card), C<elv> (ELV), C<pp> (Prepaid payment)

Some euristic on the ipayment side is performed if not provided, defaulting to 
Defaults to C<cc>.


=item Original transaction number for actions to transactions

CGI Name: C<orig_trx_number>
Data type: String


For some types of transactions you need to perform an action on a
single parameter of the transaction number of the original
transaction. This number is transmitted with C<orig_trx_number>.

=head3 Parameters for name and address of the cardholder

With these parameters, you can transfer personal information of the cardholder.

=item Name of Owner
CGI Name: C<addr_name>
Data type: string, B<maximum 100 characters>

Name of the buyer. This parameter is B<required> for all payments.

=item E-mail of the buyer
CGI Name: C<addr_email>
Data type: string, B<maximum 80 characters>

E-mail address of the buyer. If this field is filled in, the e-mail address is also (?) checked for plausibility.

=item Address of the purchaser

CGI Name: C<addr_street> (255 chars), C<addr_city> (max 50 chars),
C<addr_zip> (max 20 chars), C<addr_country> (ISO country code, 3 chars)

Data type: string length as described
Address of the purchaser. In these parameters, you can see the street (maximum 255 characters)
the city (up to 50 characters), the zip code (up to 20 characters) and ISO country code
Pass (3 characters) of the cardholder. The ISO country code based on ISO-
Country code list, which you may view at https://ipayment.de/> technique. 

If street, postcode or town were specified, all the other options should (?)
be filled.

=item More contact details of the buyer

CGI Name: C<addr_street2> (max 255 chars), C<addr_state> (2 chars)

The state is only necessary if the card holder living in the U.S. or
Canada.

=item Telephone and fax of the buyer

CGI Name: C<addr_telefon>, C<addr_telefax> (both max 30 chars)

This information will only stored, but not audited by the address
check.

# here some parameters has been skipped for now

=head3 Redirections

=item Redirect url

CGI-Name: C<redirect_url>

I<In silent mode, the parameters are always passed by GET to the
script.> (no need to C<redirect_action>)

=item If parameters for success redirect be returned?

CGI Name: C<noparams_on_redirect_url>
Data Type: Boolean (C<1> if true)

With this parameter, you can determine whether after successful
transaction the iPayment parameters to be passed. A value of 1 (true),
means that the parameter are not passed. I<In this case you should use
a hidden trigger scripts> to to transmit the information that the
payment was successful. This Function prevents browser problems: some
browsers (such as B<Internet Explorer 5>) have restrictions on the
Length of a URL, which can lead to problems when redirect.

B<Are we still caring about IE5>?


=item Redirect URL for errors in CGI silent mode

CGI Name: C<silent_error_url>
Data type: String

This URL is more in case of failure of ipayment system with the error information and parameters B<using the GET method>. This URL must point to a CGI script that can handle the paramaters.

=item If parameters are to be given the error redirect back?

CGI Name: C<noparams_on_error_url>
Data Type: Boolean
With this parameter, you can set whether to a declined transaction iPay-
ment parameters to be passed to your website or not. A value of 1 (true) are
to not pass parameters.

=item Error redirect URL for prepaid payments

CGI Name: C<backlink>
Data Type: String

This URL can be your customer in case of failure to return to your shop. This parameter   is used only for prepaid payments and comes into play, if the purchaser Payment transaction aborts. If this parameter is not set, trying ipayment, these fill with the URL of the requested page (HTTP Referer). If the value of the HTTP Referer does not exist, check the previous page using JavaScript on the history function of the Browser called.

Better we set this.

=head3 Silent mode

CGI-Name: C<silent>
Data Type: Boolean: B<use 1>


=item A pre-generated session ID Session

CGI Name: C<ipayment_session_id>
Data type: String


If a session ID is transmitted in the normal mode or silent mode, it must
have been generated ID before and returned.

B<I need to look into this>

=head3 Payment details (CC & C.)

=item Between each trasactions 2 minutes must pass, or it's
considerated a duplicate.


=head2 Preventing data tampering.

The following parameters apply when the secret key of the application
is set in the control panel.

=item security hash

CGI Name: C<trx_securityhash>
Data type: string, maximum 32 characters

Security hash of CGI command concatenating Id, amount, currency,
password, Transaction Security Key (should be set in the configuration
menu using ipayment). The hash is C<trxuser_id>, C<trx_amount>,
C<trx_currency>, C<trxpassword> and the I<transaction security key>.

  md5_hex($trxuser_id . $trx_amount . $trx_currency . $trxpassword . $sec_key); 

  perl -e 'use Digest::MD5 qw/md5_hex/;
                print  md5_hex("99998" . 5000 . "EUR" . 0 .  "testtest"), "\n";'
  # => then in the form
  <input type="hidden" name="trx_securityhash"
         value="db4812171baef817dec0cd56c0f5c8cd">

  # success:
  'ret_transtime' => '07:56:51',
  'ret_errorcode' => '0',
  'redirect_needed' => '0',
  'ret_transdate' => '13.03.13',
  'addr_name' => 'Mario Grigi',
  'trx_paymentmethod' => 'AmexCard',
  'ret_authcode' => '',
  'trx_currency' => 'EUR',
  'ret_url_checksum' => 'c7d03875caca75717842336c3008b5ac',
  'form_submit' => 'Process payment',
  'ret_param_checksum' => '6bff5d51a44f048e887d1ab7677c4798',
  'ret_ip' => '93.137.146.185',
  'trx_typ' => 'auth',
  'ret_trx_number' => '1-83400472',
  'ret_status' => 'SUCCESS',
  'trx_paymenttyp' => 'cc',
  'trx_amount' => '5000',
  'ret_booknr' => '1-83400472',
  'trxuser_id' => '99998',
  'trx_remoteip_country' => 'HR'

So, tampering the data will result with the browser stuck at
https://ipayment.de/merchant/99999/processor/2.0/ with this text:

Account-ID: 99999 ERROR: The Transaction Security-Hash doesn't match or is empty. Manipulation? ("1d9db03e9d714a15b27b97506461b731")

=item Param checksum in the success callback

CGI Name: C<ret_param_checksum>
Data type: String

The hash is the md5sum of the concatenation of C<trxuser_id>
C<trx_amount>, C<trx_currency>, C<ret_authcode>, C<ret_booknr> and
I<transaction security key>.

If one of the fields is empty or not returned, use the empty string.


The checksum is only in case of success of a transaction
(ret_errorcode = 0 and redirect_ needed = 0) are available.

 perl -e 'use Digest::MD5 qw/md5_hex/;
      print md5_hex("99998" . 5000 . "EUR" . "" . "1-83400472" .  "testtest");'

 # => 6bff5d51a44f048e887d1ab7677c4798 and it matches


=item Checksum of CGI setback URL

CGI Name: C<ret_url_checksum>
Data type: String

For the formation of the hash in the URL will be a setback & and transaction security
Attached to the application key. For this string, the MD5 checksum is generated.
The calculated hash is ret_url_checksum as parameters to the URL setback behind all
another parameter is appended to the end.

To verify the checksum you must remove C<ret_url_checksum> the
parameters of the full URL of the called script cut, the Transaction
Security Key attach and then calculate the MD5 checksum. If the
checksum is not the value parameter C<ret_url_checksum> matches, there is
probably a manipulation of URL before.

=head2 SOAP

=head3 Endpoint

L<https://ipayment.de/service/3.0/>


=head2 See also

http://git.linuxia.de/?p=ogone.git;a=blob;f=lib/Business/OnlinePayment/Ogone.pm;h=906d924e33d554291fd8f51fdc36d5ff9491245c;hb=HEAD