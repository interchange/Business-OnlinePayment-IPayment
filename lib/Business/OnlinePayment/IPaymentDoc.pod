=head2 transaction types

=over 4

=item preauth : reserve the amount

=item auth : actual payment

=item base_check : plausibility check

=item check_save: do a preauth and then cancel (some banks don't support this)

=back

=head2  actions

=over 4

=item capture

Withdrawing pre-authorized transactions

only ID needed.

This can fail if too much time passed (e.g. CC locked). Say within 6 days.

=item reverse

cancel preauth (full amount)

=item refund_cap 

cancel the payment after its execution (even several) On the credit
card statement of the buyer both the withdrawal, and the material is
recorded in writing. 

For ELV (direct debit)  refund_cap could be limited or impossible

=back

=head2 re-actions

New payments/auth using the old transaction ID. Data stored for 3 month.

=over 4

=item re_preauth

=item re_auth 

=item grefund_cap !!! unclear. Why

To perform a credit for a credit card with no transaction has yet been carried out with ipayment.

Grefund_cap transaction type should not be used in an online store environment but most of backend systems.

Therefore, you must allow the use of this type of transaction first free cups of ipayment support. Please contact in this case, a rationale for the activation request

=back

=head2 phone auth

It can happen that a deduction or credit for payments by credit card completed
rejects is. You can recognize the error code if alternatively a telephone authorization
possible. This happens, for example, if it is in the transaction is a very high posts. Call in this case to the approval of your payment service provider
and perform an unauthorized payment by phone.

=over 4

=item voice_auth

You have obtained the phone approval and want to charge the amount
now. After approval by the authorization service, you can type the
transaction voice_auth use. In addition to the credit card
information you need as an additional parameter to Authorization
number, which you have been called on the phone. The amount will be
immedi- booked.

=item voice_grefund_cap

After unlocking. Unclear the difference between voice_auth and
voice_grefund_cap

=back

=head2 Silent CGI mode

https://ipayment.de/merchant/99999/example/2.0/
https://ipayment.de/merchant/99999/processor/2.0/
https://ipayment.de/merchant/99999/example_addrcheck.php

For successful transactions, the parameters specified in the call 
trxuser_id trx_amount, trx_currency, trx_user_comment and address data of
your customers repeated in the result parameters.

Silent mode allows you ipayment invisibly integrate into your shop.
While the ordering process, the payment information is transmitted
directly to ipayment and there processed processed without any of
ipayment is a visible issue for your customers. You can a form for
recording the data to create maps, the layout perfect for your online
Shops fits. The feedback (result or error) will also be on a separate
Page displayed in your shop. This leaves your customer during the
order process never noticeably your shop. ipayment is on silent mode
relatively easy to integrate into your web application. Ver- apply to
the parameters redirect_url (success message) or silent_error_url
(Error message). Both URLs have CGI scripts to be in your store,
which-due to the overweight surrounded parameters can perform
appropriate actions. Such actions are to His example by storing the
order or the issue of the error message. Prevent manipulation of
payment data In addition to the payment data in silent mode when
calling the ipayment Basic data (for example your ipayment account
data) and other fixed-Pa parameters (for example, amount, and currency
settings) transferred. These values can be viewed by the purchaser and
also manipulated. No problem, it is, if after a successful payment,
the correctness of these values ​​is checked. If you want to prevent
these parameters from the buyer be viewed or manipulated may be, you
can transfer the information to advance ipayment and a session at
ipayment Pre-Generate. After that, transfer the call, only the ID of
the session. Exactly how it works, refer to the chapter Pre-Generate
session IDs on page 42 read. Ipayment the server uses a 256-bit SSL
certificate. Thereby, the security of data Payment information to
ensure the processing on the server ipayment. So safety can be ensured
even at the entry and transmission of data, SSL on your pages must
also be present. If you do not use SSL, it can happen that some
browsers when it returns from the SSL-secured ipayment server in your
Web warnings. In addition, we strongly recommend that you use a
special "Hidden Trigger Script" to obtain feedback from successful
transactions secure. For more information mation on this process, see
Secured feedback successful transaction tions on page 41 When silent
mode you can use 3-D Secure for "Verified by Visa", "MasterCard
SecureCode" and use "Maestro SecureCode" without further changes are
needed. 3-D Secure is in silent mode automatically available. A
separate PCI certification is also not necessary, since the payment
data solely on the server does ipayment be working. Example of
application In our FAQ you will find an example script for integrating
ipayment in "Silent mode ": http://faq.ipayment.de> questions
regarding the individual connection of ipayment> How can I ipayment in
"silent mode" use?


=head3 Redirections

=over 4

=item If parameters for success redirect be returned?

CGI Name: C<noparams_on_redirect_url>
Data Type: Boolean (C<1> if true)

With this parameter, you can determine whether after successful
transaction the iPayment parameters to be passed. A value of 1 (true),
means that the parameter are not passed. I<In this case you should use
a hidden trigger scripts> to to transmit the information that the
payment was successful. This Function prevents browser problems: some
browsers (such as B<Internet Explorer 5>) have restrictions on the
Length of a URL, which can lead to problems when redirect.

B<Are we still caring about IE5>?


=item If parameters are to be given the error redirect back?

CGI Name: C<noparams_on_error_url>
Data Type: Boolean
With this parameter, you can set whether to a declined transaction iPay-
ment parameters to be passed to your website or not. A value of 1 (true) are
to not pass parameters.

=item Error redirect URL for prepaid payments

CGI Name: C<backlink>
Data Type: String

This URL can be your customer in case of failure to return to your shop. This parameter   is used only for prepaid payments and comes into play, if the purchaser Payment transaction aborts. If this parameter is not set, trying ipayment, these fill with the URL of the requested page (HTTP Referer). If the value of the HTTP Referer does not exist, check the previous page using JavaScript on the history function of the Browser called.

Better we set this.

=back

=head3 Silent mode

CGI-Name: C<silent>
Data Type: Boolean: B<use 1>



=head2 See also

http://git.linuxia.de/?p=ogone.git;a=blob;f=lib/Business/OnlinePayment/Ogone.pm;h=906d924e33d554291fd8f51fdc36d5ff9491245c;hb=HEAD


=head2 Data storage


Many traders have previously saved himself the credit card information
of your customers payments to tions to be able to handle. The new
rules, however, say that these systems and Dealers must now be
certified by the PCI DSS rules. This is a separate Storing the data
almost impossible or uneconomical. The ipayment system has set up for
this reason a new storage service, the is fully integrated into the
transaction system. Since the ipayment system according to PCI DSS
Rules is certified, all traders who use ipayment, also of this service
per- benefit.

The payment data to be used in a query to the system ipayment stores
the storage service under a unique ID and it returns to your shop. For
this You can save an additional reference information (eg, customer
number Their customers) and specify an expiration date for the data
storage. You can use the storage service both for long-term storage of
payment data, as use for short-term storage. A short-term storage may
be, for Example, over the duration of an order process in the shop
extend. Expired payment data automatically at the specified time
ipayment removed from the system. So that payment data is stored, you
must use_datastorage the parameter place. This query parameter is
storage_id with the unique ID of the data rate returned.

For all other requests for payment processing, instead of the payment
data simply the ID of the record in the parameter from_datastorage_id
given. The ipayment System reads the payment based on the ID data from
the database, and uses this for the payment.

The existing address data is also stored in the storage service.

=head3 Parameter for the storage service

=over 4

=item If the storage service used?

CGI name: C<use_datastorage>
Web name: C<PaymentData/storageData/useDatastorage>
Data type: Boolean

A value of 1 (true) the payment data of the current request in the database
Storage services stored. The unique ID of the record is in the parameter C<storage_id> returned.

=item ID of the storage service from the payment data to be read

CGI name: C<from_datastorage_id>
Web name: C<PaymentData/storageData/fromDataStorageId>
Data type: Long

This parameter contains the ID of the storage service record from
which the payment data to be read for this transaction.

=item Expiration date of the stored data
CGI name: C<datastorage_expirydate>
Web name: C<PaymentData/storageData/datastorageExpirydate>
Data type: String

This optional parameter specifies the expiration date of the data in
storage. The data automatically deleted after this date. As the value
of U.S. date format is accepted, such as "2008/09/15".

=item Expiring the datastorage

CGI name: C<expire_datastorage>
Web name: C<paymentData/storageData/expireDatastorage>
Data type: Boolean

This optional parameter can explain the data currently being used as invalid.
This is useful if you want to make a payment, but after this record
no longer need. The parameter is only meaningful if you have a stored data
use rate from the storage service, and the ID parameter in from_datastorage_id is provided.

=item  Merchant Reference for data storage
CGI name: C<datastorage_reference>
Web name: C<aymentData/storageData/datastorageReference>
Data type: String

This reference can be stored with the payment data in the storage
service. The parameter is optional. The use of reference depending
on the reuse mode (see next parameter) is useful.

=item How should the data be stored in the storage service?

CGI name: C<datastorage_reuse_method>
Web name: C<PaymentData/storageData/datastorageReuseMethod>
Data type: Integer.

This parameter specifies under what rules the stored data or existing
IDs are reused. The value is interpreted as a bit mask. The individual
bits can be combined, although not all combinations are useful.

1 Bit (value 1) update an ID: The data in
Storage service have been saved under a unique ID
be updated for other requests. This means that
across multiple requests, the storage ID remains the same and always
is updated, regardless of how the data is changed. This
Value is used by default if the parameter
datastorage_reuse_method is not specified.

2 Bit (value 2) Always new ID: Each payment request with a
specific storage id always generates a new ID and are these
returned. This also happens when the data are identical. Provide
Make sure the expiration date of the data to use in this method.

3 Bit (value 4) Unique ID for full payment Specifications: The system
assigns a unique storage ID for the payment details. The
Payment data is the complete credit card information (without
CVC) or any banking information. This means that a more
Payment request with the same data, in which a storage ID
to be awarded, given the same storage id as the first
Request. In most cases, you can assume that
identical payment data to the same customers are.

4 Bit (value 8) Unique ID for basic payment data: This option
is very similar to the previous, but only the
Used basic payment data. These are for credit card data, only the
Card number, bank information with the bank routing number and account number.

5 Bit (value 16) Unique ID for the address details: The system assigns
depending on the address data storage a unique ID. The same
Address data at a later request to receive the same storage id
as in the first request.

6 Bit (value 32) Unique ID for the Merchant Reference: The system
assigns to each retailer reference a unique storage ID. If, for
Example, a store customer number is used as a reference dealer,
this option ensures that only one record per customer number in
Storage service exists. This record is always updated.




datastorage_reuse_method = 24: It is created as soon as the address
data or the basic payment data is updated, a new record. If, in the
credit card only the term of validity is changed, but the card number
is the same, always the same ID is used for storage.

datastorage_reuse_method = 36: It is applied when the full payment of your customer data is changed or when you submit a new value in the parameter datastorage_reference a new record. In this way, multiple payment data can be stored for store customers, for example.

datastorage_reuse_method = 52: It is applied when the payment details,
the address data or the dealer reference in the request is not exactly
a new record with the stored data match. This is for example the case
when your Customers would like to give a new customer number or if
your customer changes his address or payment details.

=item Additional result parameters of the storage service

CGI-Name: C<storage_id>
Webservice-Name: C<PaymentReturn/successDetails/retStorageId>
Data type: Long

This parameter contains the storage ID that was assigned by the
storage service.

=back

